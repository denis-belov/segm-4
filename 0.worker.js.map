{"version":3,"sources":["webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/regenerator/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/regenerator-runtime/runtime.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/cxx-specific.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/imports.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/memory.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread/thread.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread2/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread2/thread2.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3-emul/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3-ext/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3-ext/thread3.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3/thread3.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread4/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread4/thread4.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/wasm-wrapper.js"],"names":["module","exports","require","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","_invoke","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","val","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","bool","addr","arguments","mem","typed_array_constructor","memory","buffer","char","int","short","long","size_t","uint8_t","Uint8Array","int8_t","Int8Array","uint16_t","Uint16Array","int16_t","Int16Array","uint32_t","Uint32Array","int32_t","Int32Array","uint64_t","BigUint64Array","int64_t","BigInt64Array","float","double","long_double","size","addr2","globals","getCStringLength","_addr","vend","memory_views","UI8","c_string","c_string2","convertUint8ArrayToDomString","std_string","__getStdStringData","__getStdStringSize","std_string2","std_vector","__getStdVectorData","__getStdVectorSize","std_vector_char","std_vector_int","std_vector_short","std_vector_long","std_vector_size_t","std_vector_addr","std_vector_uint8_t","std_vector_int8_t","std_vector_uint16_t","std_vector_int16_t","std_vector_uint32_t","std_vector_int32_t","std_vector_uint64_t","std_vector_int64_t","std_vector_float","std_vector_double","std_vector_long_double","resizeStdVector","__resizeStdVector","updateStdVectorData","_data","set","demangleCxxNames","_this","demangled_name_max_length","demangled_name_addr","__malloc","exports_demangled_reduced","exports_demangled","reduce","_name","startsWith","concat","convertDomStringToUint8Array","demangled_name","__demangleCxxName","replace","Array","isArray","first_entry","__free","Class","wasm_wrapper","_Class","_createClass","input","_classCallCheck","_wasm_wrapper$addr","_wasm_wrapper$addr2","_slicedToArray","_defineProperty","filter","member_name","includes","member_name_trimmed","wasm_object","_member_name$match","parameters","match","split","overloaded","_len","args","_key","apply","New","NewWrapper","IDLE_FUNCTION","imports_lib","console_log","types_addr","values_addr","_console","arg_types","_wasm_wrapper$size_t","__any_value_size","_wasm_wrapper$size_t2","any_value_size","type_name","type_names","value_addr","interp_log","console","log","console_log2","_console2","date_now","Date","now","host_loop","function_addr","_function","_len2","_key2","setInterval","host_animation_loop","loop","requestAnimationFrame","_toConsumableArray","rdty_sleep","duration","DATA_ADDR","sleeping","asyncify_stop_rewind","I32","asyncify_start_unwind","setTimeout","asyncify_start_rewind","window","Worker","SharedArrayBuffer","assign","runThread","thread_addr","thread_types_addr","thread_values_addr","threads","thread","Thread2","joinThread","async_count","async_promise","async_promise_setter","promise","async_func","async_args","terminateThread","terminate","Atomics","atomic_lock_host","atomic_unlock_host","UNLOCKED","LOCKED","atomic_addr","__atomic_malloc_index","wait","Infinity","compareExchange","store","notify","WasmWrapper","Thread","Thread3","Thread3Ext","Thread3Emul","Thread4","that","options","thread_stack_size","typed_array_name","__getData","_self$typed_array_nam","_inherits","_class","_super","_createSuper","_this2","ArrayBuffer","__allocated","_possibleConstructorReturn","byteOffset","BYTES_PER_ELEMENT","_class2","byteLength","Math","imul","get","function_name","_self$typed_array_nam2","kind","type_name_index","__sizeof","typed_array_constructor_name","typed_array_constructor_wasm","typed_array_constructor_wasm2","interp_thread","Boolean","interp_arg","str","I8","UI16","I16","UI32","UI64","I64","F32","Float32Array","F64","Float64Array","_regeneratorRuntime","e","t","r","n","o","a","c","u","h","l","f","s","y","p","d","v","g","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","String","hint","prim","toPrimitive","res","Number","empty_array","data","stack_addr","stack_pointer","worker","onmessage","code","imports","imports_thread","postMessage","_join","_callee","_callee$","_context","join","active","init","work","_this$wasm_wrapper$ex","resolves","_this$wasm_wrapper","_work","_args","resolve_index","indexOf","_ref","_x","_Thread","export_name","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","from","test","len","arr2","__CODE_TYPE_BYTECODE__","__CODE_TYPE_FUNCTION__","ERROR_LOG","WARN_LOG","DEBUG_INFO","DEBUG_INFO_PUSH","_len3","_key3","DEBUG_INFO_LOG","thread_id","label","_console3","navigator","hardwareConcurrency","__wasm_wrapper__","ThreadPromiseBunch","running_count","run","callback1","callback2","callback_next1","callback_next2","all","_runAsync","t0","t1","runAsync","run2","_runAsync2","_callee2","_args2","_callee2$","_context2","runAsync2","_x2","__indirect_function_table","_async","_callee3","_len4","_key4","_args3","_callee3$","_context3","asyncify_stop_unwind","_x3","_instantiate","_callee4","_this3","wasm_module_imports","imports_custom","wasm_module","debug","imports_aggregate","wasm_module_instance","_callee4$","_context4","env","import_custom","wasm_module_import","LOG","WebAssembly","instantiate","_x4","_init","_callee5","_ref2","_ref2$memory","_ref2$memory_params","memory_params","_ref2$imports","_ref2$stack_pointer","_ref2$configureMemory","configureMemory","_ref2$forceLocalMemor","forceLocalMemory","_ref2$initGlobals","initGlobals","_ref2$demangleCxxName","_ref2$debug","_ref2$max_thread_coun","max_thread_count","_ref2$emulateThreads","emulateThreads","code_type","code_temp","_wasm_module_imports$","_wasm_module_imports$2","imported_memory","shared_memory_allowed","memory_desc","_wasm_module_imports","_this$demangleCxxName","_callee5$","_context5","minimum","initial","maximum","shared","atob","charCodeAt","getImports","compile","Module","import_desc","Memory","__main","__thread_id","_x5","_this4","prefix_length","uint8array","text_decoder","decode","text","text_encoder","encode","_testSimd","_callee6","wasm_buffer","_callee6$","_context6","testSimd","_testAtomics","_callee7","AtomicTestWorker","worker_message_event","_callee7$","_context7","testAtomics","TextDecoder","TextEncoder","getNewThread","getNewThread2","getNewThread3","getNewThread4","initThreads","_ref3","_callee8","thread_count","_this5","_threads2","_threads","_callee8$","_context8","fill","map","min","_x6","terminateThreads","cxx_specific_functions"],"mappings":"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","file":"0.worker.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// TODO: new for C++ types (e.g. _new('uint32_t', 16)).\n\nexport default\n{\n\t// https://en.cppreference.com/w/cpp/language/types\n\tbool (addr, length = 1) { return new this.mem.bool.typed_array_constructor(this.memory.buffer, addr, length); },\n\tchar (addr, length = 1) { return new this.mem.char.typed_array_constructor(this.memory.buffer, addr, length); },\n\tint (addr, length = 1) { return new this.mem.int.typed_array_constructor(this.memory.buffer, addr, length); },\n\tshort (addr, length = 1) { return new this.mem.short.typed_array_constructor(this.memory.buffer, addr, length); },\n\tlong (addr, length = 1) { return new this.mem.long.typed_array_constructor(this.memory.buffer, addr, length); },\n\tsize_t (addr, length = 1) { return new this.mem.size_t.typed_array_constructor(this.memory.buffer, addr, length); },\n\taddr (addr, length = 1) { return new this.mem.addr.typed_array_constructor(this.memory.buffer, addr, length); },\n\tuint8_t (addr, length = 1) { return new self.Uint8Array(this.memory.buffer, addr, length); },\n\tint8_t (addr, length = 1) { return new self.Int8Array(this.memory.buffer, addr, length); },\n\tuint16_t (addr, length = 1) { return new self.Uint16Array(this.memory.buffer, addr, length); },\n\tint16_t (addr, length = 1) { return new self.Int16Array(this.memory.buffer, addr, length); },\n\tuint32_t (addr, length = 1) { return new self.Uint32Array(this.memory.buffer, addr, length); },\n\tint32_t (addr, length = 1) { return new self.Int32Array(this.memory.buffer, addr, length); },\n\tuint64_t (addr, length = 1) { return new self.BigUint64Array(this.memory.buffer, addr, length); },\n\tint64_t (addr, length = 1) { return new self.BigInt64Array(this.memory.buffer, addr, length); },\n\tfloat (addr, length = 1) { return new this.mem.float.typed_array_constructor(this.memory.buffer, addr, length); },\n\tdouble (addr, length = 1) { return new this.mem.double.typed_array_constructor(this.memory.buffer, addr, length); },\n\tlong_double (addr, length = 1) { return new self.Uint8Array(this.memory.buffer, addr, length * this.mem.long_double.size); },\n\n\taddr2 (name, length = 1) { return this.addr(this.globals[name] || this.exports[name].value, length); },\n\n\tgetCStringLength (addr)\n\t{\n\t\tconst _addr = addr;\n\n\t\t// Find terminating \"\\0\".\n\t\tfor (let vend = 0; ; ++vend)\n\t\t{\n\t\t\t// if (this.char(_addr + vend)[0] === 0)\n\t\t\tif (this.memory_views.UI8[_addr + vend] === 0)\n\t\t\t{\n\t\t\t\treturn vend;\n\t\t\t}\n\t\t}\n\n\t\t// return this.exports.__strlen(addr);\n\t},\n\n\tc_string (addr)\n\t{\n\t\treturn this.char(addr, this.getCStringLength(addr));\n\t\t// return this.memory_views.UI8.subarray(addr, addr + this.getCStringLength(addr));\n\t},\n\n\tc_string2 (addr)\n\t{\n\t\treturn this.constructor.convertUint8ArrayToDomString(this.c_string(addr));\n\t\t// return this.constructor.convertUint8ArrayToDomString(this.memory_views.UI8.subarray(addr, addr + this.getCStringLength(addr)));\n\t},\n\n\tstd_string (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.char\n\t\t\t(\n\t\t\t\tthis.exports.__getStdStringData(addr),\n\n\t\t\t\tthis.exports.__getStdStringSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t},\n\n\tstd_string2 (addr)\n\t{\n\t\treturn this.constructor.convertUint8ArrayToDomString(this.std_string(addr));\n\t},\n\n\tstd_vector (addr, type)\n\t{\n\t\tconst result =\n\t\t\tthis[type]\n\t\t\t(\n\t\t\t\tthis.exports.__getStdVectorData(addr),\n\n\t\t\t\tthis.exports.__getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t},\n\n\t// std_vector_bool (addr) { return this.std_vector(addr, 'bool'); },\n\tstd_vector_char (addr) { return this.std_vector(addr, 'char'); },\n\tstd_vector_int (addr) { return this.std_vector(addr, 'int'); },\n\tstd_vector_short (addr) { return this.std_vector(addr, 'short'); },\n\tstd_vector_long (addr) { return this.std_vector(addr, 'long'); },\n\tstd_vector_size_t (addr) { return this.std_vector(addr, 'size_t'); },\n\tstd_vector_addr (addr) { return this.std_vector(addr, 'addr'); },\n\tstd_vector_uint8_t (addr) { return this.std_vector(addr, 'uint8_t'); },\n\tstd_vector_int8_t (addr) { return this.std_vector(addr, 'int8_t'); },\n\tstd_vector_uint16_t (addr) { return this.std_vector(addr, 'uint16_t'); },\n\tstd_vector_int16_t (addr) { return this.std_vector(addr, 'int16_t'); },\n\tstd_vector_uint32_t (addr) { return this.std_vector(addr, 'uint32_t'); },\n\tstd_vector_int32_t (addr) { return this.std_vector(addr, 'int32_t'); },\n\tstd_vector_uint64_t (addr) { return this.std_vector(addr, 'uint64_t'); },\n\tstd_vector_int64_t (addr) { return this.std_vector(addr, 'int64_t'); },\n\tstd_vector_float (addr) { return this.std_vector(addr, 'float'); },\n\tstd_vector_double (addr) { return this.std_vector(addr, 'double'); },\n\tstd_vector_long_double (addr) { return this.std_vector(addr, 'long_double'); },\n\n\tresizeStdVector (addr, size)\n\t{\n\t\tthis.exports.__resizeStdVector(addr, size);\n\t},\n\n\tupdateStdVectorData (addr, type, _data)\n\t{\n\t\tthis.std_vector(addr, type).set(_data);\n\t},\n\n\n\n\tdemangleCxxNames ()\n\t{\n\t\tconst demangled_name_max_length = 1024;\n\t\tconst demangled_name_addr = this.exports.__malloc(demangled_name_max_length);\n\n\t\tconst exports_demangled_reduced = {};\n\n\t\tconst exports_demangled =\n\t\t\tObject.keys(this.exports)\n\t\t\t\t.reduce\n\t\t\t\t(\n\t\t\t\t\t(exports_demangled, _name) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (_name.startsWith('_Z'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst name = `${ _name }\\0`;\n\n\t\t\t\t\t\t\tthis.memory_views.UI8.set(this.constructor.convertDomStringToUint8Array(name), demangled_name_addr);\n\n\t\t\t\t\t\t\tconst demangled_name =\n\t\t\t\t\t\t\t\tthis.constructor.convertUint8ArrayToDomString\n\t\t\t\t\t\t\t\t(this.c_string(this.exports.__demangleCxxName(demangled_name_addr)))\n\t\t\t\t\t\t\t\t\t.replace(/, /g, ',');\n\n\t\t\t\t\t\t\tif (exports_demangled[demangled_name])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (Array.isArray(exports_demangled[demangled_name]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\texports_demangled[demangled_name].push(this.exports[_name]);\n\n\t\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst first_entry = exports_demangled[demangled_name];\n\n\t\t\t\t\t\t\t\texports_demangled[demangled_name] = [ first_entry, this.exports[_name] ];\n\n\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\texports_demangled[demangled_name] = this.exports[_name];\n\n\t\t\t\t\t\t\texports_demangled_reduced[demangled_name.replace(/\\([^)]*\\)/g, '')] = this.exports[_name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t},\n\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\tthis.exports.__free(demangled_name_addr);\n\n\t\treturn { exports_demangled, exports_demangled_reduced };\n\t},\n\n\n\n\t// TODO: rename to \"getClass\".\n\tClass (name)\n\t{\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass _Class\n\t\t{\n\t\t\tstatic name = name;\n\n\t\t\tstatic overloaded = {};\n\n\n\n\t\t\tconstructor (input)\n\t\t\t{\n\t\t\t\tif (typeof input === 'number')\n\t\t\t\t{\n\t\t\t\t\tthis.addr = input;\n\t\t\t\t}\n\t\t\t\telse if (typeof input === 'string')\n\t\t\t\t{\n\t\t\t\t\t[ this.addr ] = wasm_wrapper.addr2(input);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.Object.keys(this.exports_demangled)\n\t\t\t.filter\n\t\t\t(\n\t\t\t\tmember_name => member_name.includes(name),\n\t\t\t)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmember_name =>\n\t\t\t\t{\n\t\t\t\t\tlet member_name_trimmed = member_name.replace(`${ name }::`, '').replace(/\\((.*)+/g, '');\n\n\t\t\t\t\t// Some objects may be exported twice from wasm. TODO: why does it occur?\n\t\t\t\t\tconst wasm_object =\n\t\t\t\t\t\twasm_wrapper.exports_demangled[member_name][0] || wasm_wrapper.exports_demangled[member_name];\n\n\t\t\t\t\tif (typeof wasm_object === 'function')\n\t\t\t\t\t{\n\t\t\t\t\t\tconst parameters =\n\t\t\t\t\t\t\tmember_name.match(/\\((.*)+/g)?.[0].replace(/\\(|( )|\\)/g, '').split(',');\n\n\t\t\t\t\t\tif (parameters.length && parameters[0] === '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparameters.length = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// static function\n\t\t\t\t\t\tif (parameters.length === wasm_object.length)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// non-static function\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class.prototype[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Non-wrapped\n\t\t\t\t\t\t\t_Class[`proto_${ member_name_trimmed }`] = wasm_object;\n\n\t\t\t\t\t\t\t_Class.prototype[member_name_trimmed] =\n\t\t\t\t\t\t\t\tfunction (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn wasm_object(this.addr, ...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof wasm_object === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t// Presume New() returns a pointer\n\t\tif (_Class.New)\n\t\t{\n\t\t\t_Class.NewWrapper = () => new _Class(_Class.New());\n\t\t}\n\n\n\n\t\treturn _Class;\n\t},\n};\n","const IDLE_FUNCTION = () => 0;\n\n\n\nexport default function (wasm_wrapper)\n{\n\tconst imports_lib =\n\t{\n\t\tconsole_log: (size, types_addr, values_addr) =>\n\t\t{\n\t\t\tconst arg_types = wasm_wrapper.size_t(types_addr, size);\n\n\t\t\tconst args = new Array(size);\n\n\t\t\tconst [ any_value_size ] = wasm_wrapper.size_t(wasm_wrapper.globals.__any_value_size);\n\n\t\t\tfor (let i = 0; i < size; ++i)\n\t\t\t{\n\t\t\t\tconst type_name = wasm_wrapper.type_names[arg_types[i]];\n\n\t\t\t\tconst value_addr = values_addr + (any_value_size * i);\n\n\t\t\t\targs[i] = wasm_wrapper.mem[type_name].interp_log(value_addr);\n\t\t\t}\n\n\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t},\n\n\t\tconsole_log2: (...args) =>\n\t\t{\n\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t},\n\n\t\tdate_now: () => Date.now(),\n\n\t\thost_loop: (function_addr, ...args) =>\n\t\t{\n\t\t\tconst _function = wasm_wrapper.function(function_addr);\n\n\t\t\t// setInterval(_function, 1000, ...args);\n\t\t\tsetInterval(_function, 0, ...args);\n\t\t},\n\n\t\thost_animation_loop: (function_addr) =>\n\t\t{\n\t\t\tconst _function = wasm_wrapper.function(function_addr);\n\n\t\t\tconst loop = () =>\n\t\t\t{\n\t\t\t\trequestAnimationFrame(_function);\n\n\t\t\t\t_function(...args);\n\t\t\t};\n\n\t\t\tloop();\n\t\t},\n\n\t\t// For using this function WASM code must be processed by\n\t\t// wasm-opt tool with flags: \"-O1\", \"--asyncify\".\n\t\trdty_sleep: (duration) =>\n\t\t{\n\t\t\t// Global state for running the program.\n\n\t\t\tconst DATA_ADDR = 16;\n\n\t\t\tif (wasm_wrapper.sleeping)\n\t\t\t{\n\t\t\t\t// We are called as part of a resume/rewind. Stop sleeping.\n\t\t\t\t// console.log('...resume');\n\t\t\t\twasm_wrapper.exports.asyncify_stop_rewind();\n\t\t\t\twasm_wrapper.sleeping = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are called in order to start a sleep/unwind.\n\t\t\t\t// console.log('sleep...');\n\t\t\t\t// Fill in the data structure. The first value has the stack location,\n\t\t\t\t// which for simplicity we can start right after the data structure itself.\n\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t// The end of the stack will not be reached here anyhow.\n\n\t\t\t\t// TODO: use stack_size instead of 1024 * 1024.\n\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\t\t\t\twasm_wrapper.exports.asyncify_start_unwind(DATA_ADDR);\n\t\t\t\twasm_wrapper.sleeping = true;\n\n\t\t\t\t// // Resume after the proper delay.\n\t\t\t\t// setTimeout\n\t\t\t\t// (\n\t\t\t\t// \t() =>\n\t\t\t\t// \t{\n\t\t\t\t// \t\t// console.log('timeout ended, starting to rewind the stack');\n\t\t\t\t// \t\twasm_wrapper.exports.asyncify_start_rewind(DATA_ADDR);\n\t\t\t\t// \t\t// The code is now ready to rewind; to start the process, enter the\n\t\t\t\t// \t\t// first function that should be on the call stack.\n\t\t\t\t// \t},\n\n\t\t\t\t// \tduration,\n\t\t\t\t// );\n\n\t\t\t\tsetTimeout(wasm_wrapper.exports.asyncify_start_rewind, duration, DATA_ADDR);\n\t\t\t}\n\t\t},\n\t};\n\n\t// For using these functions WASM code must be processed by\n\t// wasm-opt tool with flags: \"-O1\", \"--asyncify\".\n\t// If this is main worker.\n\tif\n\t(\n\t\tself.window &&\n\t\tself.Worker &&\n\t\tself.SharedArrayBuffer\n\t)\n\t{\n\t\tObject.assign\n\t\t(\n\t\t\timports_lib,\n\n\t\t\t{\n\t\t\t\trunThread: (thread_addr, function_addr, thread_types_addr, thread_values_addr) =>\n\t\t\t\t{\n\t\t\t\t\tif (!wasm_wrapper.threads)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.threads = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst thread =\n\t\t\t\t\t\tnew wasm_wrapper.constructor.Thread2\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\twasm_wrapper,\n\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tfunction_addr,\n\t\t\t\t\t\t\t\twasm_wrapper.exports.__getStdVectorData(thread_types_addr),\n\t\t\t\t\t\t\t\twasm_wrapper.exports.__getStdVectorData(thread_values_addr)\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t);\n\n\t\t\t\t\twasm_wrapper.threads[thread_addr] = thread;\n\t\t\t\t},\n\n\t\t\t\tjoinThread: (thread_addr) =>\n\t\t\t\t{\n\t\t\t\t\twasm_wrapper.async_count = wasm_wrapper.async_count || 0;\n\n\t\t\t\t\t++wasm_wrapper.async_count;\n\n\t\t\t\t\tif (wasm_wrapper.async_count === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.async_promise =\n\t\t\t\t\t\t\tnew Promise\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresolve =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twasm_wrapper.async_promise_setter = (val) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (val)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst DATA_ADDR = 16;\n\n\t\t\t\t\tif (wasm_wrapper.sleeping)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.exports.asyncify_stop_rewind();\n\n\t\t\t\t\t\twasm_wrapper.sleeping = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\n\t\t\t\t\t\twasm_wrapper.exports.asyncify_start_unwind(DATA_ADDR);\n\n\t\t\t\t\t\twasm_wrapper.sleeping = true;\n\n\t\t\t\t\t\twasm_wrapper.threads[thread_addr].promise\n\t\t\t\t\t\t\t.then\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twasm_wrapper.exports.asyncify_start_rewind(DATA_ADDR);\n\n\t\t\t\t\t\t\t\t\twasm_wrapper.async_func(...wasm_wrapper.async_args);\n\n\t\t\t\t\t\t\t\t\tif (wasm_wrapper.async_count % 2 === 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twasm_wrapper.async_promise_setter(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tterminateThread: (thread_addr) =>\n\t\t\t\t{\n\t\t\t\t\twasm_wrapper.threads[thread_addr].terminate();\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tif\n\t(\n\t\t// self.Worker && // Safari doesn't allow workers to create Worker objects. Only main worker is allowed.\n\t\tself.SharedArrayBuffer &&\n\t\tself.Atomics\n\t)\n\t{\n\t\tif (self.window)\n\t\t{\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timports_lib,\n\n\t\t\t\t{\n\t\t\t\t\tatomic_lock_host: IDLE_FUNCTION,\n\t\t\t\t\tatomic_unlock_host: IDLE_FUNCTION,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst UNLOCKED = 0;\n\t\t\tconst LOCKED = 1;\n\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timports_lib,\n\n\t\t\t\t{\n\t\t\t\t\tatomic_lock_host (atomic_addr)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst __atomic_malloc_index = atomic_addr / 4;\n\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tself.Atomics.wait(wasm_wrapper.memory_views.I32, __atomic_malloc_index, LOCKED, Infinity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (self.Atomics.compareExchange(wasm_wrapper.memory_views.I32, __atomic_malloc_index, UNLOCKED, LOCKED) === LOCKED);\n\t\t\t\t\t},\n\n\t\t\t\t\tatomic_unlock_host (atomic_addr)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst __atomic_malloc_index = atomic_addr / 4;\n\n\t\t\t\t\t\tself.Atomics.store(wasm_wrapper.memory_views.I32, __atomic_malloc_index, UNLOCKED);\n\t\t\t\t\t\tself.Atomics.notify(wasm_wrapper.memory_views.I32, __atomic_malloc_index, 1);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\treturn imports_lib;\n};\n","// import '@babel/runtime/regenerator';\n\nimport WasmWrapper from './wasm-wrapper';\nimport Thread from './threads/thread';\nimport Thread2 from './threads/thread2';\nimport Thread3 from './threads/thread3';\nimport Thread3Ext from './threads/thread3-ext';\nimport Thread3Emul from './threads/thread3-emul';\nimport Thread4 from './threads/thread4';\n\n\n\nObject.assign\n(\n\tWasmWrapper,\n\n\t{\n\t\tThread,\n\t\tThread2,\n\t\tThread3,\n\t\tThread3Ext,\n\t\tThread3Emul,\n\t\tThread4,\n\t},\n);\n\nexport default WasmWrapper;\n\n\n\nexport\n{\n\tThread,\n\tThread2,\n\tThread3,\n\tThread3Ext,\n\tThread3Emul,\n\tThread4,\n};\n\n\n\nconst IDLE_FUNCTION = () => 0;\n","export default function ()\n{\n\tconst that = this;\n\n\n\n\tthis.options =\n\t\tObject.assign\n\t\t(\n\t\t\t{\n\t\t\t\t// 1024 b * 1024 b == 1048576 b == 1 mb\n\t\t\t\tthread_stack_size: 0x0100000,\n\t\t\t},\n\n\t\t\tthis.options,\n\t\t);\n\n\n\n\t[\n\t\t'Uint8Array',\n\t\t'Int8Array',\n\t\t'Uint16Array',\n\t\t'Int16Array',\n\t\t'Uint32Array',\n\t\t'Int32Array',\n\t\t'Uint8Array',\n\t\t'Int8Array',\n\t\t'BigUint64Array',\n\t\t'BigInt64Array',\n\t\t'Float32Array',\n\t\t'Float64Array',\n\t]\n\t\t.forEach\n\t\t(\n\t\t\ttyped_array_name =>\n\t\t\t{\n\t\t\t\tif (self[typed_array_name])\n\t\t\t\t{\n\t\t\t\t\tself[typed_array_name].prototype.__getData = function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\n\t\t\t\t\tself[`${ typed_array_name }2`] = self[typed_array_name];\n\n\t\t\t\t\t/**\n\t\t\t\t\t * byteOffset is an address in WASM memory.\n\t\t\t\t\t *\n\t\t\t\t\t * Array has to be used carefully, especially on mobile devices.\n\t\t\t\t\t * Undefined behavior may be occured in the following cases:\n\t\t\t\t\t * - Transferring array between workers (for both ArrayBuffer and SharedArrayBuffer).\n\t\t\t\t\t * - Calling slice().\n\t\t\t\t\t * ...\n\t\t\t\t\t */\n\n\t\t\t\t\tthis[typed_array_name] = class extends self[typed_array_name]\n\t\t\t\t\t{\n\t\t\t\t\t\tconstructor (...args)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (args[0] instanceof self.ArrayBuffer || (self.SharedArrayBuffer && args[0] instanceof self.SharedArrayBuffer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (args[0] === that.memory.buffer)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsuper(...args);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = false;\n\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthrow new Error('wasm-wrapper typed array can not be backed by array buffer other than wasm-wrapper instance memory buffer.');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet length = 0;\n\n\t\t\t\t\t\t\tif (typeof args[0] === 'object')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// length = args[0].length;\n\t\t\t\t\t\t\t\t[ { length } ] = args;\n\n\t\t\t\t\t\t\t\tif (args[0] instanceof that[typed_array_name] || args[0] instanceof that[`${ typed_array_name }2`])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst [ { byteOffset } ] = args;\n\n\t\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst byteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\t\tthis.set(args[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlength = args[0];\n\n\t\t\t\t\t\t\t\tconst byteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\tthis.__allocated = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t__free () { that.exports.__free(this.byteOffset); }\n\n\t\t\t\t\t\t__getData () { return new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length); }\n\n\t\t\t\t\t\t// slice (...args) {}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis[`${ typed_array_name }2`] = class\n\t\t\t\t\t{\n\t\t\t\t\t\tconstructor (...args)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet byteOffset = 0;\n\t\t\t\t\t\t\tlet length = 0;\n\t\t\t\t\t\t\tlet byteLength = 0;\n\n\t\t\t\t\t\t\tthis.__allocated = false;\n\n\t\t\t\t\t\t\tif (args[0] instanceof self.ArrayBuffer || (self.SharedArrayBuffer && args[0] instanceof self.SharedArrayBuffer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (args[0] === that.memory.buffer)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbyteOffset = args[1] || 0;\n\t\t\t\t\t\t\t\t\tlength = args[2] || (that.memory.buffer.byteLength / self[typed_array_name].BYTES_PER_ELEMENT);\n\t\t\t\t\t\t\t\t\tbyteLength = Math.imul(length, self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length, byteLength });\n\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthrow new Error('wasm-wrapper typed array can not be backed by array buffer other than wasm-wrapper instance memory buffer.');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof args[0] === 'object')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[ { length } ] = args;\n\t\t\t\t\t\t\t\tbyteLength = Math.imul(length, self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t// if (args[0].buffer === that.memory.buffer)\n\t\t\t\t\t\t\t\tif (args[0] instanceof that[typed_array_name] || args[0] instanceof that[`${ typed_array_name }2`])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t[ { byteOffset } ] = args;\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length, byteLength });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbyteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length, byteLength });\n\n\t\t\t\t\t\t\t\t\tthis.set(args[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[ length ] = args;\n\t\t\t\t\t\t\t\tbyteLength = Math.imul(length, self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tbyteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length, byteLength });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tget buffer () { return that.memory.buffer; }\n\n\t\t\t\t\t\t__free () { that.exports.__free(this.byteOffset); }\n\n\t\t\t\t\t\t__getData () { return new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length); }\n\t\t\t\t\t};\n\n\t\t\t\t\t[\n\t\t\t\t\t\t'set',\n\t\t\t\t\t\t'slice',\n\t\t\t\t\t]\n\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tfunction_name =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis[`${ typed_array_name }2`].prototype[function_name] = function (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn (new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length))[function_name](...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\n\n\t{\n\t\tthis.mem =\n\t\t// TODO: wrap into \"cxx\" prop.\n\t\t// TODO: add \"views\" props instead of using this.memory_views.\n\t\t{\n\t\t\t'bool': { kind: 'Uint' },\n\t\t\t'char': { kind: 'Uint' },\n\t\t\t'int': { kind: 'Int' },\n\t\t\t'short': { kind: 'Int' },\n\t\t\t'long': { kind: 'Int' },\n\t\t\t'size_t': { kind: 'Uint' },\n\t\t\t'addr': { kind: 'Uint' },\n\t\t\t'uint8_t': { kind: 'Uint' },\n\t\t\t'int8_t': { kind: 'Int' },\n\t\t\t'uint16_t': { kind: 'Uint' },\n\t\t\t'int16_t': { kind: 'Int' },\n\t\t\t'uint32_t': { kind: 'Uint' },\n\t\t\t'int32_t': { kind: 'Int' },\n\t\t\t'uint64_t': { kind: 'Uint' },\n\t\t\t'int64_t': { kind: 'Int' },\n\t\t\t'float': { kind: 'Float' },\n\t\t\t'double': { kind: 'Float' },\n\t\t\t'long_double': { kind: 'Float' },\n\t\t\t'c_string': {},\n\t\t};\n\n\t\tthis.type_names = Object.keys(this.mem);\n\n\t\tthis.type_names\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\t(type_name, type_name_index) =>\n\t\t\t\t{\n\t\t\t\t\tconst size = this.exports.__sizeof(type_name_index);\n\n\t\t\t\t\tlet typed_array_constructor_name = `${ this.mem[type_name].kind }${ size * 8 }Array`;\n\n\t\t\t\t\tif (!this[typed_array_constructor_name])\n\t\t\t\t\t{\n\t\t\t\t\t\ttyped_array_constructor_name = `Big${ typed_array_constructor_name }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tObject.assign\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.mem[type_name],\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\ttyped_array_constructor: self[typed_array_constructor_name],\n\t\t\t\t\t\t\ttyped_array_constructor_wasm: this[typed_array_constructor_name],\n\t\t\t\t\t\t\ttyped_array_constructor_wasm2: this[`${ typed_array_constructor_name }2`],\n\t\t\t\t\t\t\tinterp_log: addr => this[type_name](addr)[0],\n\t\t\t\t\t\t\tinterp_thread: addr => this[type_name](addr),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\tthis.mem.bool.interp_log = addr => Boolean(this.bool(addr)[0]),\n\n\t\tthis.mem.c_string.interp_log = addr => this.c_string2(this.addr(addr)[0]);\n\t\tthis.mem.c_string.interp_thread = addr => this.addr(addr);\n\t\tthis.mem.c_string.interp_arg = str => (new this.mem.char.typed_array_constructor_wasm(this.constructor.convertDomStringToUint8Array(str))).byteOffset;\n\t}\n\n\n\n\t{\n\t\tthis.memory_views = {};\n\n\t\tthis.memory_views.UI8 = new self.Uint8Array(this.memory.buffer);\n\t\tthis.memory_views.UI8 = new self.Uint8Array(this.memory.buffer);\n\t\tthis.memory_views.I8 = new self.Int8Array(this.memory.buffer);\n\t\tthis.memory_views.UI16 = new self.Uint16Array(this.memory.buffer);\n\t\tthis.memory_views.I16 = new self.Int16Array(this.memory.buffer);\n\t\tthis.memory_views.UI32 = new self.Uint32Array(this.memory.buffer);\n\t\tthis.memory_views.I32 = new self.Int32Array(this.memory.buffer);\n\t\tthis.memory_views.I32 = new self.Int32Array(this.memory.buffer);\n\t\tif (self.BigUint64Array) { this.memory_views.UI64 = new self.BigUint64Array(this.memory.buffer); }\n\t\tif (self.BigInt64Array) { this.memory_views.I64 = new self.BigInt64Array(this.memory.buffer); }\n\t\tthis.memory_views.F32 = new self.Float32Array(this.memory.buffer);\n\t\tthis.memory_views.F64 = new self.Float64Array(this.memory.buffer);\n\t}\n}\n","import Worker from './thread.1.worker.js';\n\n\n\nconst empty_array = [];\n\n\n\nexport default class Thread\n{\n\tconstructor (wasm_wrapper, function_name, data = empty_array)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.__malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\t// Should be private?\n\t\tthis.promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker = new Worker();\n\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports_thread: imports } = wasm_wrapper;\n\n\t\t\t\t\t// for (const key in memory)\n\t\t\t\t\t// {\n\t\t\t\t\t// \tif (key !== 'buffer')\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tdelete memory[key];\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\n\t\t\t\t\t\tfunction_name,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\t}\n\n\tterminate ()\n\t{\n\t\tthis.worker.terminate();\n\n\t\tthis.wasm_wrapper.exports.__free(this.stack_addr);\n\n\t\t// this.promise = null;\n\t}\n\n\tasync join ()\n\t{\n\t\tawait this.promise;\n\n\t\tthis.terminate();\n\t}\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"thread.1.worker.worker.worker.js\");\n}\n","// C++ thread\n\n\n\nimport Worker from './thread2.1.worker.js';\n\n\n\nexport default class Thread2\n{\n\tconstructor (wasm_wrapper, data)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.__malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\tthis.active = true;\n\n\t\tthis.promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker = new Worker();\n\n\t\t\t\t\t// TODO: free stack memory when thread terminates automatically.\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports_thread: imports } = wasm_wrapper;\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\t}\n\n\tterminate ()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.worker.terminate();\n\n\t\t\tthis.wasm_wrapper.exports.__free(this.stack_addr);\n\n\t\t\tthis.active = false;\n\t\t}\n\t}\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"thread2.1.worker.worker.worker.js\");\n}\n","export default class Thread\n{\n\tconstructor (wasm_wrapper)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\t}\n\n\tinit ()\n\t{\n\t\treturn true;\n\t}\n\n\twork (function_name, _data = [])\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tconst data = this.wasm_wrapper.exports[function_name](..._data);\n\n\t\t\t\t\tresolve({ data });\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\tterminate () {}\n}\n","import Worker from './thread3.1.worker.js';\n\n\n\nexport default class Thread\n{\n\t// TODO: add stack_size option.\n\tconstructor (wasm_wrapper)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.__malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\tthis.worker = new Worker();\n\n\t\tthis.resolves = [ null ];\n\t}\n\n\tinit ()\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports_thread: imports } = this.wasm_wrapper;\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\tasync work (function_name, data = [])\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tlet resolve_index = this.resolves.indexOf(null);\n\n\t\t\t\t\tif (resolve_index === -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve_index = this.resolves.length;\n\t\t\t\t\t}\n\n\t\t\t\t\t// LOG('resolve_index', resolve_index)\n\n\t\t\t\t\tthis.resolves[resolve_index] = resolve;\n\n\t\t\t\t\t// this.worker.onmessage = resolve;\n\n\t\t\t\t\t// TODO: move to init() ?\n\t\t\t\t\tthis.worker.onmessage = ({ data }) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// LOG('data.resolve_index', data.resolve_index)\n\t\t\t\t\t\tthis.resolves[data.resolve_index]();\n\n\t\t\t\t\t\tthis.resolves[data.resolve_index] = null;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.worker.postMessage({ function_name, data, resolve_index });\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\t// TODO.\n\t// work2 (function_list)\n\t// {\n\t// \tconst promise =\n\t// \t\tnew Promise\n\t// \t\t(\n\t// \t\t\tresolve =>\n\t// \t\t\t{\n\t// \t\t\t\tthis.worker.onmessage = resolve;\n\n\t// \t\t\t\tthis.worker.postMessage({ work_list });\n\t// \t\t\t},\n\t// \t\t);\n\n\t// \treturn promise;\n\t// }\n\n\tterminate ()\n\t{\n\t\tthis.worker.terminate();\n\n\t\tthis.wasm_wrapper.exports.__free(this.stack_addr);\n\n\t\t// this.promise = null;\n\t}\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"thread3.1.worker.worker.worker.js\");\n}\n","import Worker from './thread3.1.worker.js';\n\n\n\nexport default class Thread\n{\n\t// TODO: add stack_size option.\n\tconstructor (wasm_wrapper)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.__malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\tthis.worker = new Worker();\n\t}\n\n\tinit ()\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports_thread: imports } = this.wasm_wrapper;\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\twork (function_name, data = [])\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tthis.worker.postMessage({ function_name, data });\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\t// TODO.\n\t// work2 (function_list)\n\t// {\n\t// \tconst promise =\n\t// \t\tnew Promise\n\t// \t\t(\n\t// \t\t\tresolve =>\n\t// \t\t\t{\n\t// \t\t\t\tthis.worker.onmessage = resolve;\n\n\t// \t\t\t\tthis.worker.postMessage({ work_list });\n\t// \t\t\t},\n\t// \t\t);\n\n\t// \treturn promise;\n\t// }\n\n\tterminate ()\n\t{\n\t\tthis.worker.terminate();\n\n\t\tthis.wasm_wrapper.exports.__free(this.stack_addr);\n\n\t\t// this.promise = null;\n\t}\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"thread3.1.worker.worker.worker.js\");\n}\n","import Thread3 from '../thread3';\nimport Worker from './thread4.1.worker.js';\n\n\n\n// TODO: remove class name?\nexport default class Thread extends Thread3\n{\n\t// TODO: add stack_size option.\n\tconstructor (wasm_wrapper)\n\t{\n\t\tsuper(wasm_wrapper);\n\n\t\tthis.exports = {};\n\n\t\tObject.keys(wasm_wrapper.exports).forEach\n\t\t(\n\t\t\texport_name =>\n\t\t\t{\n\t\t\t\tif (typeof wasm_wrapper.exports[export_name] === 'function' && !export_name.startsWith('__'))\n\t\t\t\t{\n\t\t\t\t\tthis.exports[export_name] = (...args) => this.work(export_name, args);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"thread4.1.worker.worker.worker.js\");\n}\n","/**\n * https://webassembly.org\n * https://webassembly.github.io/spec\n * https://github.com/WebAssembly\n * https://github.com/WebAssembly/WASI\n * https://github.com/WebAssembly/wasi-sdk\n * https://github.com/WebAssembly/wasi-libc\n * https://developer.mozilla.org/en-US/docs/WebAssembly\n * https://wasi.dev\n * https://lld.llvm.org/WebAssembly.html\n * https://github.com/bytecodealliance/wasmtime/blob/main/docs/WASI-documents.md\n * https://docs.wasmtime.dev/\n * https://v8.dev/\n *\n *\n *\n * wasi-sdk updates may also include clang updates which may produce some WASM\n * instructions that some older versions of browsers may not support. For the aims\n * of using latest wasi-sdk versions we need to test browser for supporting\n * groups of instructions, e.g. SIMD or atomics. So such functions as\n * \"testSimd()\" and \"testAtomics()\" are made for this.\n *\n *\n *\n * Using TypedArray.subarray() is preferred\n * when accessing to data\n * to avoid extra memory allocation.\n *\n *\n *\n * Strange std::string behavior:\n * if std::string data length <=11, std::string object address is the same with its data;\n * if >11, std::string object name stores address of beginning of the data.\n * So in second case one can use WasmWrapper::c_string method to get string bytes.\n * Maybe it's not related to data length, but to dynamic memory allocation.\n *\n *\n *\n * If memory is shared then maximum memory size is specified at compilation.\n *\n *\n *\n * Passing argument by reference works as passing by pointer.\n * So, functions with reference parameters expect address instead of value.\n *\n *\n *\n * TODO: determination capabiity of what wasm memory type is being used.\n *\n *\n *\n * 1 page == 65536 bytes == 0.0625 mb.\n * 1 mb == 16 pages.\n * 1gb == 16384 pages.\n * 4gb == 65536 pages (maximum memory size for wasm32).\n */\n\n\n\n/*\neslint-disable\n\nmax-statements,\n*/\n\n\n\nimport '@babel/runtime/regenerator';\n\n// Webpack arraybuffer-loader is required.\n// import test_simd_wasm_buffer from './test-simd/build/clang-wasm32/output/wasm/test-simd.wasm';\n\nimport configureMemory from './memory';\nimport getImports from './imports';\nimport cxx_specific_functions from './cxx-specific';\n\n\n\nconst __CODE_TYPE_BYTECODE__ = 0;\nconst __CODE_TYPE_FUNCTION__ = 1;\n\n\n\nconst IDLE_FUNCTION = () => 0;\n\nconst ERROR_LOG = (...args) => console.log(`%c${ args[0] }`, 'background-color: red; padding: 2px;', ...args.slice(1));\nconst WARN_LOG = (...args) => console.log(`%c${ args[0] }`, 'background-color: #8B8000; padding: 2px;', ...args.slice(1));\n\nconst DEBUG_INFO = [];\n\nconst DEBUG_INFO_PUSH = (...args) => DEBUG_INFO.push(args);\n\nconst DEBUG_INFO_LOG = thread_id =>\n{\n\tDEBUG_INFO.forEach(label => console.log(`%c${ thread_id }: ${ label[0] }`, 'background-color: #00858A; padding: 2px;', ...label.slice(1)));\n\n\tDEBUG_INFO.length = 0;\n};\n\n\n\nDEBUG_INFO_PUSH(`WASM CONCURRENCY: ${ self.navigator.hardwareConcurrency }`);\n\n\n\nclass WasmWrapper\n{\n\tstatic text_decoder = new self.TextDecoder('utf-8');\n\tstatic text_encoder = new self.TextEncoder();\n\n\tstatic convertUint8ArrayToDomString (uint8array)\n\t{\n\t\t// return WasmWrapper.text_decoder.decode(uint8_array);\n\t\t// return WasmWrapper.text_decoder.decode(uint8array.slice());\n\t\treturn WasmWrapper.text_decoder.decode(new self.Uint8Array(uint8array)); // Decoding view of shared buffer is not allowed so need new instance.\n\t}\n\n\tstatic convertDomStringToUint8Array (text)\n\t{\n\t\treturn WasmWrapper.text_encoder.encode(text);\n\t}\n\n\tstatic async testSimd ()\n\t{\n\t\tlet result = false;\n\n\t\ttry\n\t\t{\n\t\t\t// webpack arraybuffer-loader has to be installed when using the library with soures files.\n\t\t\t// const wasm_buffer = (await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm')).default;\n\t\t\tconst wasm_buffer = (await import('./test-simd/build/test.wasm')).default;\n\n\t\t\tconst wasm_module = await WebAssembly.compile(wasm_buffer);\n\n\t\t\tconst instance = await WebAssembly.instantiate(wasm_module);\n\n\t\t\t// // Webpack since version 4 has embedded WASM parser.\n\t\t\t// // MIME type \"application/wasm\" must be defined for \".wasm\" extension on server.\n\t\t\t// // TODO: use another type of importing ?\n\t\t\t// await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm');\n\n\t\t\tresult = true;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tERROR_LOG(`WASM SIMD TEST FAILED: ${ error }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM SIMD: ${ result ? 'ON' : 'OFF' }`);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * memory.atomic.wait can't be called in main worker\n\t * so need to make the test in another worker.\n\t */\n\n\tstatic async testAtomics ()\n\t{\n\t\tconst AtomicTestWorker = (await import('./test-atomic/src/test-atomic.worker.js')).default;\n\n\t\tconst worker = new AtomicTestWorker();\n\n\t\tconst worker_message_event =\n\t\t(\n\t\t\tawait new Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tworker.onmessage = resolve;\n\n\t\t\t\t\tworker.postMessage(true);\n\t\t\t\t},\n\t\t\t)\n\t\t);\n\n\t\tconst result = worker_message_event.data;\n\n\t\tworker.terminate();\n\n\t\tDEBUG_INFO_PUSH(`WASM ATOMICS: ${ result ? 'ON' : 'OFF' }`);\n\t}\n\n\tconstructor (options = {})\n\t{\n\t\tself.__wasm_wrapper__ = this;\n\n\t\tthis.options = options;\n\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass ThreadPromiseBunch\n\t\t{\n\t\t\tconstructor ()\n\t\t\t{\n\t\t\t\t// TODO: rename to run_count.\n\t\t\t\tthis.running_count = 0;\n\t\t\t}\n\n\t\t\trun (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.run(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tasync runAsync (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(await callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.runAsync(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\trun2 (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\treturn Promise.all(callback1()).then(callback2);\n\t\t\t}\n\n\t\t\tasync runAsync2 (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\treturn Promise.all(await callback1()).then(callback2);\n\t\t\t}\n\t\t}\n\n\t\tthis.ThreadPromiseBunch = ThreadPromiseBunch;\n\t}\n\n\tfunction (addr)\n\t{\n\t\treturn this.exports.__indirect_function_table.get(addr);\n\t}\n\n\tasync async (_function, ...args)\n\t{\n\t\tthis.async_args = args;\n\n\t\t(this.async_func = _function)(...args);\n\n\t\tthis.exports.asyncify_stop_unwind();\n\n\t\tawait this.async_promise;\n\n\t\tthis.async_count = 0;\n\t}\n\n\tasync instantiate ({ wasm_module_imports, imports_lib, imports_custom, wasm_module, code, debug })\n\t{\n\t\t// Object for passing to threads.\n\t\tthis.imports_thread = { env: {} };\n\n\t\tObject.keys(imports_custom)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmodule =>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(imports_custom[module])\n\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\timport_custom =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!this.imports_thread[module])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.imports_thread[module] = {};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.imports_thread[module][import_custom] = 0;\n\n\t\t\t\t\t\t\t\t// TODO: use \"|=\" operator ?\n\t\t\t\t\t\t\t\t// If (imports_custom[module][import_custom] === 0) then make it IDLE_FUNCTION.\n\t\t\t\t\t\t\t\timports_custom[module][import_custom] = imports_custom[module][import_custom] || IDLE_FUNCTION;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\tconst imports_aggregate = {};\n\n\t\tObject.assign(imports_aggregate, imports_custom);\n\n\t\tObject.assign\n\t\t(\n\t\t\timports_aggregate.env,\n\n\t\t\timports_lib,\n\t\t);\n\n\t\t// Imported memory\n\t\tif (this.memory)\n\t\t{\n\t\t\timports_aggregate.env.memory = this.memory;\n\t\t}\n\n\t\twasm_module_imports\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\twasm_module_import =>\n\t\t\t\t{\n\t\t\t\t\tif (!imports_aggregate[wasm_module_import.module])\n\t\t\t\t\t{\n\t\t\t\t\t\timports_aggregate[wasm_module_import.module] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!imports_aggregate[wasm_module_import.module][wasm_module_import.name])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (debug)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tWARN_LOG(`Missed ${ wasm_module_import.module } import:`, wasm_module_import.name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timports_aggregate[wasm_module_import.module][wasm_module_import.name] = IDLE_FUNCTION;\n\t\t\t\t\t\t// imports_aggregate[wasm_module_import.module][wasm_module_import.name] = () => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); };\n\n\t\t\t\t\t\t// if (wasm_module_import.name !== 'clock_time_get')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \timports_aggregate[wasm_module_import.module][wasm_module_import.name] = () => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); };\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t// if (wasm_module_import.name === 'fd_write')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \timports_aggregate[wasm_module_import.module][wasm_module_import.name] = (...args) => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); LOG(args.map(arg => this.CString2(arg))); };\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\tlet exports = null;\n\n\t\tLOG(wasm_module)\n\n\t\tif (wasm_module)\n\t\t{\n\t\t\tconst wasm_module_instance =\n\t\t\t\tawait WebAssembly.instantiate\n\t\t\t\t// await WebAssembly.instantiateStreaming\n\t\t\t\t(\n\t\t\t\t\twasm_module,\n\n\t\t\t\t\timports_aggregate,\n\t\t\t\t);\n\n\t\t\tLOG(wasm_module_instance)\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM MODULE INSTANCE:', wasm_module_instance);\n\t\t\t}\n\n\t\t\t// this.instance = wasm_module_instance;\n\n\t\t\t({ exports } = wasm_module_instance);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// imports_aggregate.wasi_snapshot_preview1 = {};\n\t\t\t// imports_aggregate.wasi_snapshot_preview1.fd_write = (...args) => LOG(args.map(arg => this.c_string2(arg)));\n\n\t\t\texports = code(imports_aggregate);\n\t\t}\n\n\t\t// Exported memory\n\t\tif (!this.memory)\n\t\t{\n\t\t\tthis.memory = exports.memory;\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ this.memory.buffer.byteLength / 65536 } pages (${ this.memory.buffer.byteLength } bytes)`);\n\n\t\treturn exports;\n\t}\n\n\tasync init\n\t({\n\t\t// TODO: reorder.\n\t\tcode,\n\t\tmemory = null,\n\t\t// Initial and minimum memory sizes must be greater than heap base.\n\t\tmemory_params = { minimum: 1, initial: 1, maximum: 65536, shared: true },\n\t\timports: imports_custom = { env: {} },\n\t\tstack_pointer = undefined,\n\t\tconfigureMemory = true,\n\t\tforceLocalMemory = false,\n\t\tinitGlobals = true,\n\t\tdemangleCxxNames = false,\n\t\tdebug = false,\n\t\tmax_thread_count = Infinity,\n\t\temulateThreads = false,\n\t})\n\t{\n\t\tthis.max_thread_count = max_thread_count;\n\t\tthis.emulateThreads = emulateThreads;\n\n\t\tLOG(max_thread_count, emulateThreads)\n\n\t\tlet code_type = null;\n\n\t\t// Code for passing to other WASM instances (e.g. threads).\n\t\tthis.code = code;\n\n\t\tif (typeof code === 'string')\n\t\t{\n\t\t\tif (code.startsWith('function'))\n\t\t\t{\n\t\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\t\tcode = new Function(code);\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string function -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t\t// base64\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Uint8Array.from(atob(code), c => c.charCodeAt(0));\n\n\t\t\t\t// TODO: Make code shared (if can) to speed up passing it to workers. DONE?\n\t\t\t\tif (self.SharedArrayBuffer)\n\t\t\t\t{\n\t\t\t\t\tconst code_temp = code;\n\n\t\t\t\t\tcode = new Uint8Array(new SharedArrayBuffer(code.length));\n\n\t\t\t\t\tcode.set(code_temp);\n\t\t\t\t}\n\n\t\t\t\tthis.code = code;\n\n\t\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string base64 -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t}\n\t\telse if (typeof code === 'function')\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\tthis.code = code.toString();\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: function`);\n\t\t}\n\t\t// Code is an Uint8Array backed (SharedArrayBuffer optionally) or ArrayBuffer or SharedArrayBuffer.\n\t\t// UPD. SharedArrayBuffer can not be used as source for WebAssembly module, only for Uint8Array\n\t\t// backed by SharedArrayBuffer.\n\t\telse\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code.constructor.name }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code_type === __CODE_TYPE_BYTECODE__ ? 'BYTECODE' : 'FUNCTION' }`);\n\n\n\n\t\tconst imports_lib = getImports(this);\n\n\n\n\t\tif (code_type === __CODE_TYPE_BYTECODE__)\n\t\t{\n\t\t\tconst wasm_module = await WebAssembly.compile(code);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM MODULE: ', wasm_module);\n\t\t\t}\n\n\t\t\tconst wasm_module_imports = WebAssembly.Module.imports(wasm_module);\n\t\t\t// const wasm_module_exports = WebAssembly.Module.exports(wasm_module);\n\n\t\t\tthis.memory = null;\n\n\t\t\t// Memory comes from WASM main worker instance to thread instance.\n\t\t\t// is always imported and shared.\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: SHARED')\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst [ imported_memory ] =\n\t\t\t\t\twasm_module_imports\n\t\t\t\t\t\t.filter((import_desc) => (import_desc.kind === 'memory'));\n\n\t\t\t\tconst shared_memory_allowed = Boolean(self.SharedArrayBuffer) && !forceLocalMemory;\n\n\t\t\t\tLOG('imported_memory', imported_memory)\n\n\t\t\t\tif (imported_memory)\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\n\t\t\t\t\tlet memory_desc = null;\n\n\t\t\t\t\tif (imported_memory.type)\n\t\t\t\t\t{\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * chrome://flags#enable-experimental-webassembly-features must be enabled if exists\n\t\t\t\t\t\t * or Chrome must have this option enabled by default\n\t\t\t\t\t\t * to access \"type\" property of \"imported_memory\". It contains memory\n\t\t\t\t\t\t * type and size info produced by the linker (aka defined in WebAssembly module).\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * \"--import-memory\" linker flag specifies whether memory is imported to WebAssembly module.\n\t\t\t\t\t\t * \"--shared-memory\" linker flag specifies whether memory is shared between WebAssembly instances.\n\t\t\t\t\t\t * \"--max-memory=N\" linker flag specifies maximum size of memory for WebAssembly instance.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * The advantqge of this is that we don't need to provide \"memory_params\"\n\t\t\t\t\t\t * to crate the memory object. Memory object is created automatically\n\t\t\t\t\t\t * after reading the \"imported_memory.type\".\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tmemory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinitial: imported_memory.type.minimum,\n\t\t\t\t\t\t\tmaximum: imported_memory.type.maximum || imported_memory.type.minimum,\n\t\t\t\t\t\t\tshared: imported_memory.type.shared && shared_memory_allowed,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// Parameters must match values produced by the linker (aka defined in WebAssembly module).\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmemory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// 65536 pages == 4gb, maximum possible memory size for 32-bit WebAssembly instance.\n\t\t\t\t\t\t\tinitial: memory_params.initial,\n\t\t\t\t\t\t\tmaximum: memory_params.maximum, // Must match \"--max-memory=N\" flag.\n\t\t\t\t\t\t\t// shared, // Must match \"--shared-memory\" flag.\n\t\t\t\t\t\t\tshared: memory_params.shared && shared_memory_allowed,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.memory = new WebAssembly.Memory(memory_desc);\n\n\t\t\t\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ memory_desc.shared ? 'SHARED' : 'NOT SHARED' }`)\n\t\t\t\t}\n\t\t\t\t// TODO: add the case when memory is imported but can be created with arbitrary parameters.\n\t\t\t\t// Is this case possible? Meybe possible only when memory is not shared?\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: EXPORTED')\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.exports = await this.instantiate({ wasm_module_imports, imports_lib, imports_custom, wasm_module, debug });\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/**\n\t\t\t * Initializes WasmWrapper instance with JS code compiled from WASM with wasm2js.\n\t\t\t * In this case presume WASM instances don't use shared memory and exported memory.\n\t\t\t * Compiler option \"-matomics\" must not be used.\n\t\t\t * Linker option \"--shared-memory\" must not be used.\n\t\t\t * wasm2js options \"--disable-threads\", \"--emscripten\" must be used.\n\t\t\t */\n\n\t\t\tthis.memory = null;\n\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// this.memory = { buffer: new self.ArrayBuffer(Math.imul(memory_params.initial, memory_params.maximum)) };\n\t\t\t\tthis.memory = { buffer: new self.ArrayBuffer(Math.imul(memory_params.initial, 65536)) };\n\t\t\t}\n\n\t\t\t// TODO: Find better solution to get import modules used.\n\t\t\t// Now it is hardcoded.\n\t\t\tconst wasm_module_imports =\n\t\t\t[\n\t\t\t\t{ module: 'env' },\n\t\t\t\t{ module: 'wasi_snapshot_preview1' },\n\t\t\t];\n\n\t\t\tthis.exports = await this.instantiate({ wasm_module_imports, imports_lib, imports_custom, code, debug });\n\t\t}\n\n\n\n\t\tif (configureMemory)\n\t\t{\n\t\t\tthis.configureMemory();\n\t\t}\n\n\t\tif (this.exports.__main)\n\t\t{\n\t\t\tthis.__thread_id = this.exports.__main(stack_pointer);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_LOG(this.__thread_id);\n\t\t\t}\n\t\t}\n\n\t\tif (initGlobals)\n\t\t{\n\t\t\tthis.globals = this.initGlobals();\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM GLOBALS:', this.globals);\n\t\t\t}\n\t\t}\n\n\t\tif (demangleCxxNames)\n\t\t{\n\t\t\tconst { exports_demangled, exports_demangled_reduced } = this.demangleCxxNames();\n\n\t\t\tObject.assign(this, { exports_demangled, exports_demangled_reduced });\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM EXPORTS DEMANGLED: ', this.exports_demangled);\n\t\t\t\tDEBUG_INFO_PUSH('WASM EXPORTS DEMANGLED: ', this.exports_demangled_reduced);\n\t\t\t}\n\t\t}\n\t}\n\n\tinitGlobals ()\n\t{\n\t\tconst globals = {};\n\n\t\tconst prefix_length = '__EXPORT_ADDR__'.length;\n\n\t\tObject.keys(this.exports)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\texport_name =>\n\t\t\t\t{\n\t\t\t\t\tif (export_name.startsWith('__EXPORT_ADDR__'))\n\t\t\t\t\t{\n\t\t\t\t\t\tglobals[export_name.slice(prefix_length)] = this.exports[export_name]();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\tLOG('globals', globals)\n\n\t\treturn globals;\n\t}\n}\n\n\n\nif (self.window)\n{\n\tWasmWrapper.prototype.getNewThread = function () { return new WasmWrapper.Thread(this); }\n\tWasmWrapper.prototype.getNewThread2 = function () { return new WasmWrapper.Thread2(this); }\n\tWasmWrapper.prototype.getNewThread3 = function () { return new WasmWrapper.Thread3(this); }\n\tWasmWrapper.prototype.getNewThread4 = function () { return new WasmWrapper.Thread4(this); }\n\n\tWasmWrapper.prototype.initThreads = async function (thread_count)\n\t{\n\t\tif (this.emulateThreads === true || this.max_thread_count < 1)\n\t\t{\n\t\t\tconst threads =\n\t\t\t\tnew Array(thread_count)\n\t\t\t\t\t.fill(null)\n\t\t\t\t\t.map(() => new WasmWrapper.Thread3Emul(this));\n\n\t\t\treturn threads;\n\t\t}\n\n\t\t// const threads =\n\t\t// \tnew Array(thread_count)\n\t\t// \t\t.fill(null)\n\t\t// \t\t.map(() => new WasmWrapper.Thread3(this));\n\t\tconst threads =\n\t\t\tnew Array(Math.min(thread_count, this.max_thread_count))\n\t\t\t\t.fill(null)\n\t\t\t\t.map(() => new WasmWrapper.Thread3Ext(this));\n\n\t\tawait Promise.all(threads.map(thread => thread.init()));\n\n\t\tif (thread_count > this.max_thread_count)\n\t\t{\n\t\t\tconst _threads = [];\n\n\t\t\tfor (; thread_count > this.max_thread_count; --thread_count)\n\t\t\t{\n\t\t\t\t_threads.push(threads[(thread_count - this.max_thread_count) % threads.length]);\n\t\t\t}\n\n\t\t\tthreads.push(..._threads);\n\t\t}\n\n\t\treturn threads;\n\t};\n\n\tWasmWrapper.prototype.terminateThreads = function terminateThreads (threads)\n\t{\n\t\tthreads\n\t\t\t.reverse()\n\t\t\t.forEach(thread => thread.terminate());\n\t};\n}\n\n\n\nWasmWrapper.prototype.configureMemory = configureMemory;\n\nObject.assign(WasmWrapper.prototype, cxx_specific_functions);\n\n\n\nexport default WasmWrapper;\n"],"sourceRoot":""}